<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wildsoft.shopping_mall.shop.ShopDao">

  <!-- 상품 -->
  <select id="getProductList"
    parameterType="com.wildsoft.shopping_mall.shop.ProductVO"
    resultType="com.wildsoft.shopping_mall.shop.ProductVO">
      <![CDATA[
        select rnum, q.*
        from (
          select
            row_number() over (order by product_id desc) as rnum,
            k.*
          from (
            select * from products where 1=1
      ]]>
      <if test="search_type == 'product_name'">
      <![CDATA[
            and product_name like concat('%', #{search_value}, '%')
      ]]>
      </if>
      <if test="search_type == 'category'">
      <![CDATA[
            and category like concat('%', #{search_value}, '%')
      ]]>
      </if>
      <if test="search_type == 'created_at'">
        <choose>
          <when test="date_search_type == 'year'">
            <![CDATA[
              and YEAR(created_at) = #{search_value}
            ]]>
          </when>
          <when test="date_search_type == 'month'">
            <![CDATA[
              and MONTH(created_at) = #{search_value}
            ]]>
          </when>
          <when test="date_search_type == 'day'">
            <![CDATA[
              and DAY(created_at) = #{search_value}
            ]]>
          </when>
          <otherwise>
            <![CDATA[
              and DATE(created_at) = DATE(#{search_value})
            ]]>
          </otherwise>
        </choose>
      </if>
      <![CDATA[
          ) k
        ) q
        where rnum between #{start} and #{end}
      ]]>
  </select>

	<select id="getProductsCount" resultType="int">
    select count(*) as total_count from products
  </select>

  <select id="getProduct" 
    parameterType="com.wildsoft.shopping_mall.shop.ProductVO"
    resultType="com.wildsoft.shopping_mall.shop.ProductVO">
      select * from products where product_id = #{product_id}
  </select>

  <insert id="insertProduct" parameterType="com.wildsoft.shopping_mall.shop.ProductVO">
    insert into products (product_name, product_description, product_price, stock_quantity, category)
    values (#{product_name}, #{product_description}, #{product_price}, #{stock_quantity}, #{category})
  </insert>

  <update id="updateProduct" parameterType="com.wildsoft.shopping_mall.shop.ProductVO">
    update products
    <set>
      <if test="product_name != null">product_name = #{product_name},</if>
      <if test="product_description != null">product_description = #{product_description},</if>
      <if test="product_price != 0">product_price = #{product_price},</if>
      <if test="stock_quantity != 0">stock_quantity = #{stock_quantity},</if>
      <if test="category != null">category = #{category},</if>
    </set>
    where product_id = #{product_id}
  </update>

  <delete id="deleteProduct" parameterType="com.wildsoft.shopping_mall.shop.ProductVO">
    delete from products where product_id = #{product_id}
  </delete>

  <!-- 장바구니 -->
  <select id="getCartList" 
    parameterType="com.wildsoft.shopping_mall.shop.CartVO"
    resultType="com.wildsoft.shopping_mall.shop.CartVO">
      select c.id, c.cart_id, c.product_id, c.product_price, c.quantity,
        (c.quantity * c.product_price) as total_price, 
        c.created_at, c.updated_at,
        p.product_name, p.product_description, p.category
      from carts c
      join products p ON c.product_id = p.product_id
      where c.id = #{id}
  </select>

  <select id="findCartItem" 
    parameterType="com.wildsoft.shopping_mall.shop.CartVO"
    resultType="com.wildsoft.shopping_mall.shop.CartVO">
      select * from carts where id = #{id} and product_id = #{product_id}
  </select>

  <insert id="insertCart" parameterType="com.wildsoft.shopping_mall.shop.CartVO">
    insert into carts (id, product_id, product_price, quantity)
    values (#{id}, #{product_id}, #{product_price}, #{quantity})
  </insert>

  <update id="updateCart" parameterType="com.wildsoft.shopping_mall.shop.CartVO">
    update carts set quantity = #{quantity}
    where id = #{id} and product_id = #{product_id}
  </update>

  <delete id="deleteCart" parameterType="com.wildsoft.shopping_mall.shop.CartVO">
    delete from carts where id = #{id} and product_id = #{product_id}
  </delete>

  <!-- 주문하기 -->
  <insert id="insertOrder" parameterType="com.wildsoft.shopping_mall.shop.OrderVO"
      useGeneratedKeys="true" keyProperty="order_id">
    insert into orders (id, order_name, shipping_fee, total_amount, order_status, name, 
                        phone, shipping_address, payment_method)
    values (#{id}, #{order_name}, #{shipping_fee}, #{total_amount}, '결제완료', #{name}, 
            #{phone}, #{shipping_address}, #{payment_method})
  </insert> 

  <insert id="insertOrderItem" parameterType="com.wildsoft.shopping_mall.shop.OrderItemVO">
    insert into order_items (order_id, product_id, quantity, total_price)
    values (#{order_id}, #{product_id}, #{quantity}, #{total_price})
  </insert>

  <!-- 결제 정보 -->
  <select id="getPaymentAllList" parameterType="int" resultType="com.wildsoft.shopping_mall.shop.OrderVO">
    <![CDATA[
      select * from orders where id = #{id} order by order_id desc
    ]]>
  </select>

  <select id="getPaymentOneList" parameterType="int" resultType="com.wildsoft.shopping_mall.shop.PaymentResponseVO">
    <![CDATA[
      SELECT o.order_id, o.id, o.order_name, o.shipping_fee, o.total_amount, o.order_status, 
            o.name, o.phone, o.shipping_address, o.payment_method, 
            oi.order_item_id, oi.product_id, oi.quantity, oi.total_price, 
            p.product_name, p.product_description, p.product_price
      FROM orders o
      JOIN order_items oi ON o.order_id = oi.order_id
      JOIN products p ON oi.product_id = p.product_id
      WHERE o.order_id = #{order_id}
    ]]>
  </select>
</mapper>